{
  "name": "ThumbstickJS",
  "tagline": "A virtual joystick for touch capable interfaces.",
  "body": "# ThumbstickJS\r\n> A virtual joystick for touch capable interfaces\r\n\r\n## Install\r\n```node\r\nnpm install nipplejs --save\r\n\r\n// OR\r\n\r\nbower install nipplejs --save\r\n```\r\n\r\n----\r\n## Usage\r\n\r\nImport it the way you want into your project :\r\n\r\n```javascript\r\n// CommonJS\r\nvar joystick = require('nipplejs').create(options);\r\n\r\n// AMD\r\ndefine(['nipplejs'], function (nipplejs) {\r\n    var joystick = nipplejs.create(options);\r\n});\r\n\r\n// Global\r\n<script type=\"text/javascript\" src=\"./dist/nipplejs.min.js\"></script>\r\n<script type=\"text/javascript\">\r\n    var joystick = nipplejs.create(options);\r\n</script>\r\n```\r\n----\r\n## Options\r\nYou can configure your joystick in different ways :\r\n\r\n```javascript\r\nvar options = {\r\n    zone: Element,\r\n    color: String,\r\n    size: Integer,\r\n    threshold: Float,\r\n    fadeTime: Integer\r\n};\r\n```\r\n\r\nAll options are optional.\r\n\r\n### [`zone`] defaults to 'body'\r\nThe dom element in which your joystick will be injected.\r\n```javascript\r\n<div id=\"zone_joystick\"></div>\r\n\r\n<script type=\"text/javascript\" src=\"./nipplejs.min.js\"></script>\r\n<script type=\"text/javascript\">\r\n    var options = {\r\n        zone: document.getElementById('zone_joystick');\r\n    };\r\n    var joystick = nipplejs.create(options);\r\n</script>\r\n```\r\nThis zone also serve as the mouse/touch events handler.\r\n\r\nIt represents the zone where your joystick will be active.\r\n\r\n### [`color`] defaults to 'white'\r\nThe background color of your joystick's elements.\r\n\r\nCan be any valid CSS color.\r\n\r\n### [`size`] defaults to 100\r\nThe size in pixel of the outer circle.\r\n\r\nThe inner circle is 50% of this size.\r\n\r\n### [`threshold`] defaults to 0.1\r\nThis is the strength needed to trigger a directional event.\r\n\r\nBasically, the center is 0 and the outer is 1.\r\n\r\nYou need to at least go to 0.1 to trigger a directional event.\r\n\r\n### [`fadeTime`] defaults to 250\r\nThe time it takes for joystick to fade-out and fade-in when activated or de-activated.\r\n\r\n----\r\n## API\r\nYour `nipplejs` instance will come back as :\r\n\r\n```javascript\r\n{\r\n    el: Element,\r\n    on: Function,\r\n    off: Function,\r\n    options: Object,\r\n    ui: Object\r\n}\r\n```\r\n\r\n### `el`\r\nDom element in which the joystick gets created.\r\n```html\r\n<div class=\"nipple\">\r\n    <div class=\"front\"></div>\r\n    <div class=\"back\"></div>\r\n</div>\r\n```\r\n\r\n### `on`\r\nIf you whish to listen to internal events like :\r\n\r\n```javascript\r\njoystick.on('event', function (data) {\r\n    // Do something.\r\n});\r\n```\r\n\r\n### `off`\r\nTo remove an event handler :\r\n\r\n```javascript\r\njoystick.off('event', handler);\r\n```\r\n### `options`\r\nSimply the options you passed at its creation.\r\n\r\n### `ui`\r\nThe object that store its ui elements\r\n\r\n```javascript\r\n{\r\n    el: <div class=\"nipple\"></div>\r\n    back: <div class=\"back\"></div>\r\n    front: <div class=\"front\"></div>\r\n}\r\n```\r\n----\r\n## Events\r\n\r\n#### `start`\r\nThe joystick is activated. (the user pressed on the active zone)\r\n\r\n#### `end`\r\nThe joystick is de-activated. (the user released the active zone)\r\n\r\n#### `move`\r\nThe joystick is moved.\r\nComes with data :\r\n```javascript\r\n{\r\n    position: { // absolute position of the center in pixels\r\n        x: 125,\r\n        y: 95\r\n    },\r\n    force: 0.2, // strength in %\r\n    distance: 25.4, // distance from center in pixels\r\n    angle: {\r\n        radian: 1.5707963268, // angle in radian\r\n        degree: 90\r\n    }\r\n}\r\n```\r\n\r\n#### `dir`\r\nWhen a direction is reached after the threshold.\r\n\r\nDirection are split with a 45° angle.\r\n```javascript\r\n//     \\  UP /\r\n//      \\   /\r\n// LEFT       RIGHT\r\n//      /   \\\r\n//     /DOWN \\\r\n```\r\nYou can also listen to specific direction like :\r\n- `dir:up`\r\n- `dir:down`\r\n- `dir:right`\r\n- `dir:left`\r\n\r\nIn this configuration only one direction is triggered at a time.\r\n\r\n#### `plain`\r\nWhen a plain direction is reached after the threshold.\r\n\r\nPlain directions are split with a 90° angle.\r\n```javascript\r\n//       U|P\r\n//LEFT____|___ RIGHT\r\n//        |\r\n//      DO|WN\r\n```\r\nYou can also listen to specific plain direction like :\r\n- `plain:up`\r\n- `plain:down`\r\n- `plain:right`\r\n- `plain:left`\r\n\r\nIn this configuration two directions can be triggered at a time,\r\nbecause the user could be both `up` and `left` for example.\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}
